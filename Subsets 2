class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        Arrays.sort(nums);
        dfs(res, list, nums, 0);
        return res;
        
        
    }
    
    private void dfs(List<List<Integer>> res, List<Integer> list, int[] nums, int index){
        if(index == nums.length){
            res.add(new ArrayList(list));
            return;
        }
        
        list.add(nums[index]);
        dfs(res, list, nums, index + 1);
        list.remove(list.size() - 1);
        while(index + 1 < nums.length && nums[index + 1] == nums[index]){
            index++;
        }
        dfs(res, list, nums, index + 1);
    }
}
