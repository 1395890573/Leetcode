class Solution {
    public boolean isBipartite(int[][] graph) {
        int[] color = new int[graph.length];
        for(int i = 0; i < graph.length; i++){
            if(color[i] == 0){
                if(!dfs(color, graph, 1, i)){
                    return false;
                }
            }
        }
        
        return true;
        
    }
    
    private boolean dfs(int[] color, int[][] graph, int curColor, int node){
        if(color[node] != 0){
            return color[node] == curColor;
        }
        
        color[node] = curColor;
        for(int i = 0; i < graph[node].length; i++){
            if(!dfs(color, graph, -curColor, graph[node][i])){
                return false;
            }
        }
        
        return true;
    }
    
    
}
